// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  email     String   @unique
  name      String?
  is_paid   Boolean  @default(false)
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
}

model Author {
  id            String      @id @default(uuid())
  name          String
  date_of_birth String
  bio_graphy    String
  is_archived   Boolean  @default(false)
  Books         Books[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now()) @updatedAt
}

model Categories {
  id               String      @id @default(uuid())
  name             String
  is_archived      Boolean            @default(false)
  Categories_Books Categories_Books[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now()) @updatedAt
}

model Books {
  id               String      @id @default(uuid())
  title            String
  asset_url        String
  book_url         String?
  price            String?
  is_premium       Boolean
  author_id        String
  is_archived      Boolean            @default(false)
  author           Author             @relation(fields: [author_id], references: [id])
  Categories_Books Categories_Books[]
  Chapters          Chapters[]
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @default(now()) @updatedAt
}

model Categories_Books {
  id            String      @id @default(uuid())
  categories_id String
  books_id      String
  is_archived      Boolean            @default(false)
  categories    Categories @relation(fields: [categories_id], references: [id])
  books         Books      @relation(fields: [books_id], references: [id])
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @default(now()) @updatedAt
}

model Chapters {
  id            String      @id @default(uuid())
  book_id       String
  books         Books     @relation(fields: [book_id],references: [id])
  title         String
  pages         Pages[]
}

model Pages {
  id            String      @id  @default(uuid())
  page_number   String
  body          String
  chapter_id    String      
  chapters      Chapters    @relation(fields: [chapter_id],references: [id])
}

enum UserRole {
  USER
  ADMIN
}
